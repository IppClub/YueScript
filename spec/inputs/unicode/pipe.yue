
{"abc", 123, 998} |> 每一个 打印

{1,2,3}
	|> 映射 (变量x)-> 变量x * 2
	|> 过滤 (变量x)-> 变量x > 4
	|> 合并 0, (变量a,变量b)-> 变量a + 变量b
	|> 打印

[i |> tostring for i = 0,10] |> table.concat(",") |> 打印

变量b = 1 + 2 + (4 |> tostring |> 打印(1) or 123)

if 变量x := 233 |> math.max 998
	打印 变量x

with 变量b |> 创建? "new"
	.value = 123
	打印 \工作!

123 |> 函数f?

"abc" |> 函数1? |> 函数2?

变量c = "abc" |> 函数1? |> 函数2?

函数f = ->
	参数 |> x.y?\如果

998 |> 函数2 "abc", 233 |> 函数0 |> 函数1
998 |> 函数0("abc", 233) |> 函数1 |> 函数2

1 |> 函数f 2, 3, 4, 5
值(2) |> 函数f 1, _, 3, 4, 5
数组[3] |> 函数f 1, 2, _, 4, 5

变量a = {"1","2","3"} |> table.concat("") |> tonumber |> 函数1(1, 2, 3, _) |> 函数2(1, _, 3)

读文件("example.txt") |>
	提取(_, 语言, {}) |>
	解析(_, 语言) |>
	发出 |>
	渲染 |>
	打印

读文件("example.txt") \
	|> 提取(_, 语言, {}) \
	|> 解析(_, 语言) \
	|> 发出 \
	|> 渲染 \
	|> 打印

读文件 "example.txt"
	|> 提取 _, 语言, {}
	|> 解析 _, 语言
	|> 发出
	|> 渲染
	|> 打印

123 |> not 函数! |> 函数f

do
	_1 = 列表{"abc","xyz","123"}\映射"#"\值!
		|> -函数!
		|> abc 123, _, "x"

	global _2,_3,_4 = 1,2,3
		|> 函数f

	local _5 = 变量v |> 函数1 1
					|> 函数2 2
					|> 函数3 3
					|> 函数4 4

变量x = 123 |> 函数a |> 函数b or 456 |> 函数c |> 函数d or 函数a.if\那么("abc") or 函数a?.函数b\函数c?(123) or 变量x\函数y

变量x1 = 3 * -4 |> 函数f

变量x2 = 3 * -2 ^ 2 |> 函数f

变量y = 1 + not # 2 |> (函数a ^ 函数c) |> 函数b(3,_) * 4 ^ -123 |> 函数f |> 函数1 or 123

nil

