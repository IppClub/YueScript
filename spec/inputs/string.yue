
hi = "hello"
hello = "what the heckyes"
print hi

umm = 'umm'

here, another = "yeah", 'world'

aye = "YU'M"
you '"hmmm" I said'

print aye, you

another = [[ hello world ]]


hi_there = [[
  hi there
]]

well = [==[ "helo" ]==]

hola = [===[
  eat noots]===]

mm = [[well trhere]]

txt = [[


nil
Fail to compile
]]

txt[ [[abc]]] = [["#{i}" for i = 1, 10] for i = 1, 10]]

oo = ""

x = "\\"
x = "a\\b"
x = "\\\n"
x = "\""

-- 

a = "hello #{hello} hello"
b = "#{hello} hello"
c = "hello #{5+1}"
d = "#{hello world}"
e = "#{1} #{2} #{3}"

f = [[hello #{world} world]]
g = "\#{hello world}"

--

a = 'hello #{hello} hello'
b = '#{hello} hello'
c = 'hello #{hello}'


--

_ = "hello"
"hello"\format 1
"hello"\format(1,2,3)
"hello"\format(1,2,3) 1,2,3

"hello"\world!
"hello"\format!.hello 1,2,3
"hello"\format 1,2,3

something"hello"\world!
something "hello"\world!

do
	str = |
		key: value
	str = |
		config:
			enabled: true
			level: 5
	str = |
		header: start

		footer: end
	str = |
		name: #{username}
	str = |
		count: #{total} items
	str = |
		user: #{name}
		id: #{id}
	str = |
		path: "C:\\Program Files\\App"
		desc: 'single "quote" test'
	str = |
		key: value   
		next: 123   
	str = |
		list:
		  - "one"
		  - "two"
	str = |
		-- comment
		content text
		-- comment
	str = |
		#{1 + 2}
		#{2 + 3}
		#{"a" .. "b"}
	obj =
		settings: |
			mode: #{mode}
			flags:
				- #{flag1}
				- default
	fn = -> |
		Hello
		name: #{userName}
	str = |
		result:
			status: #{if ok then "pass" else "fail"}
			code: #{code}
	summary = |
		date: #{os.date()}
		values:
			-
				a: #{aVal}
				b: #{bVal or defaultB}
	msg = send |
		Hello, #{user}!
		Today is #{os.date("%A")}.
	desc = do
		prefix = "Result"
		|
			#{prefix}:
			value: #{compute!}
	(|
		1
		2
		3
	) |> print

export yaml = |
	version: #{ver}
	ok: true

